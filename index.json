[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.dannoprojects.com/notes/go/basic/introduction/","summary":"\u003c!-- A Sample Program --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eHello World\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003eA sample go program is show here.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003emessage\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egreetMe\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003emessage\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egreetMe\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello, \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;!\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRun the program as below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ go run hello.go\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Declaring Variables --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eVariables\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003e\u003cstrong\u003eNormal Declaration:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emsg\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emsg\u003c/span\u003e = \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eShortcut:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emsg\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Declaring Constants --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eConstants\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePhi\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e1.618\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Go পরিচিতি"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.dannoprojects.com/notes/go/basic/types/","summary":"\u003c!-- String Type --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eStrings\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003estr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMultiline string\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003estr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e`Multiline\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003estring`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Number Types --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eNumbers\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cp\u003eTypical types\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enum\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e          \u003cspan style=\"color:#75715e\"\u003e// int\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enum\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e3.\u003c/span\u003e         \u003cspan style=\"color:#75715e\"\u003e// float64\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enum\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e4i\u003c/span\u003e     \u003cspan style=\"color:#75715e\"\u003e// complex128\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enum\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e byte(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e)  \u003cspan style=\"color:#75715e\"\u003e// byte (alias for uint8)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOther Types\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eu\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003euint\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// uint (unsigned)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ep\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efloat32\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e22.7\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e// 32-bit float\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!----------- Arrays  ------\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eArrays\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// var numbers [5]int\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enumbers\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e [\u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e]\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e{\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Pointers --\u003e\n\u003cdiv class=\"note-card medium-note\"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003ePointers\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e () {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003egetPointer\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Value is\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetPointer\u003c/span\u003e () (\u003cspan style=\"color:#a6e22e\"\u003emyPointer\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e234\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e new(\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e = \u003cspan style=\"color:#ae81ff\"\u003e234\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePointers point to a memory location of a variable. Go is fully garbage-collected.\u003c/p\u003e","tags":null,"title":"বেসিক টাইপ সমূহ"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.dannoprojects.com/notes/go/basic/flow-control/","summary":"\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eCondition\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;sunday\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;saturday\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003erest\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;monday\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eisTired\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003egroan\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ework\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edoThing\u003c/span\u003e(); \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Uh oh\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Switch --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eSwitch\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;sunday\u0026#34;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003efallthrough\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;saturday\u0026#34;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003erest\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003ework\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Loop --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eLoop\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e; \u003cspan style=\"color:#a6e22e\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e; \u003cspan style=\"color:#a6e22e\"\u003ecount\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;My counter is at\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ecount\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eentry\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e []\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e{\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Jack\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;John\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Jones\u0026#34;\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ei\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eval\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003erange\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eentry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;At position %d, the character %s is present\\n\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ei\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eval\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003en\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003en\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003en\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eguess\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.dannoprojects.com/notes/go/advanced/files/","summary":"\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eCondition\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;sunday\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;saturday\u0026#34;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003erest\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eday\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;monday\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eisTired\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003egroan\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ework\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edoThing\u003c/span\u003e(); \u003cspan style=\"color:#a6e22e\"\u003eerr\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003efmt\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Uh oh\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"ফাইল ম্যানিপুলেশন"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://www.dannoprojects.com/notes/bash/basic/","summary":"\u003c!-- Variable --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eVariable\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eNAME\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;John\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho $NAME\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$NAME\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eNAME\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Condition --\u003e\n\u003cdiv class=\"note-card \"\u003e\n    \u003cdiv class=\"item\"\u003e\n        \u003ch5 class=\"note-title\"\u003e\u003cspan\u003eCondition\u003c/span\u003e\u003c/h5\u003e\n        \n            \u003cdiv class=\"card\"\u003e\n                \u003cdiv class=\"card-body\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[[\u003c/span\u003e -z \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$string\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  echo \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;String is empty\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eelif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$string\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  echo \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;String is not empty\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n            \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e","tags":null,"title":"ব্যাশ ভেরিয়েবল"},{"categories":null,"contents":"Printer Monitor: Because Printers Are Out to Get Us No one wants to be the printer whisperer—especially for low-cost, unmanaged printers. After one too many toner emergencies (always at 4:59 PM on a Friday), I decided to automate the pain away. If you’re tired of being the “toner psychic,” this Python script is for you.\nWhy? Printers are needy, dramatic, and love to run out of toner at the worst possible moment. This project checks their status, logs the drama, and even emails you when it’s time to order more supplies. No more “surprise, you’re out of magenta!” moments.\nWhat Does It Do? Monitors multiple printers for:\nToner levels (Black, Cyan, Magenta, Yellow) Waste toner status (because that’s a thing, apparently) Approximate pages remaining (for the truly paranoid) Sends email notifications when supplies are low, so you can ignore them at your leisure Logs everything, because if it’s not in the logs, it didn’t happen The Problem: Printers Are the Worst Printers were invented by someone who truly hates IT professionals. They break constantly, online/offline at a whim, and always run out of toner during the most critical print job of the year. We have three different HP models, each with its own special way of reporting toner levels, because why standardize?\nThe Solution: Python to the Rescue I put together this using Python, Selenium, and some grit. It did take some trial and error to get the web pages to parse though.\n# The imports alone should tell you how much pain went into this import requests from bs4 import BeautifulSoup from selenium import webdriver from selenium.webdriver.chrome.options import Options # ...plus about 20 more imports because PRINTERS The script does several things:\nConnects to each printer\u0026rsquo;s embedded web server Scrapes the toner levels using either direct HTTP requests or Selenium for the particularly stubborn ones Logs everything (because documentation or it didn\u0026rsquo;t happen) Emails me when supplies are running low The best part is how it handles different printer models:\nfor printer in config[\u0026#34;printers\u0026#34;]: if printer[\u0026#34;type\u0026#34;] == \u0026#34;pages_remaining\u0026#34;: # Deal with the M404dn\u0026#39;s special snowflake reporting elif printer[\u0026#34;type\u0026#34;] == \u0026#34;toner\u0026#34;: # Extract percentage from the M402\u0026#39;s bizarre format elif printer[\u0026#34;type\u0026#34;] == \u0026#34;mfp\u0026#34;: # Handle the MFP which reports FOUR different toners # Because one toner cartridge wasn\u0026#39;t expensive enough How Does It Work? You’ll need Python 3.8+, a few pip installs, and a willingness to admit that YAML is better than Excel for this sort of thing.\nConfigure your .env file with your Google API credentials and log file path. Here .gitignore is your friend.\nThen, set up your printers in printers.yaml like so:\n# printers.yaml printers: - name: \u0026#34;OfficePrinter1\u0026#34; ip: \u0026#34;192.168.1.100\u0026#34; model: \u0026#34;HP LaserJet 400\u0026#34; - name: \u0026#34;ColorPrinter\u0026#34; ip: \u0026#34;192.168.1.101\u0026#34; model: \u0026#34;Brother HL-L8360CDW\u0026#34; Running the Script You could run it manually:\npython printer_status.py But let’s be honest, you’ll forget. That’s why we automate.\nScheduling with Windows Task Scheduler (Because Cron Jobs Are Too Mainstream) Here’s how I made Windows do my dirty work:\nOpen Task Scheduler (search for it in the Start menu—yes, it still exists). Create a New Task. Name it something like “Printer Monitor” so future-you knows what it is. Set the Trigger to run daily at 7:00 AM, or whenever you want to be reminded of your printer’s existential crisis. Set the Action: Program/script: Path to your Python executable (e.g., C:\\Users\\You\\AppData\\Local\\Programs\\Python\\Python39\\python.exe) Add arguments: printer_status.py Start in: PrinterMonitor Save. Enter your password. Curse at UAC. Done. Make sure the service account running the task has network access to all the printers. I learned that one the hard way after two days of debugging silent failures.\nThe Results Now when toner runs low, I get an email like this:\nOrder Printer Supplies: M402 Black toner percentage: 10% Order 26X (CF226X) MFP Black Cartridge (CE400X): 8% Lessons Learned YAML is significantly better than hardcoding printer information Selenium is your friend for awful printer web interfaces Headless Chrome is CPU-intensive but worth it Always, always check your path_to_credentials.json is correct in the Task Scheduler The Code If you too want to avoid the \u0026ldquo;surprise toner emergency,\u0026rdquo; check out the complete code.\nBecause remember:\nThe best sysadmin is the one who automates themselves out of the most tedious tasks.\n","date":"April 14, 2025","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/devops/python/printer_monitor/","summary":"\u003ch1 id=\"printer-monitor-because-printers-are-out-to-get-us\"\u003ePrinter Monitor: Because Printers Are Out to Get Us\u003c/h1\u003e\n\u003cp\u003eNo one wants to be the printer whisperer—especially for low-cost, unmanaged printers. After one too many toner emergencies (always at 4:59 PM on a Friday), I decided to automate the pain away. If you’re tired of being the “toner psychic,” this Python script is for you.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"why\"\u003eWhy?\u003c/h2\u003e\n\u003cp\u003ePrinters are needy, dramatic, and love to run out of toner at the worst possible moment. This project checks their status, logs the drama, and even emails you when it’s time to order more supplies. No more “surprise, you’re out of magenta!” moments.\u003c/p\u003e","tags":["Python","Printers","Automation","Monitoring"],"title":"Printer Monitor: Because Printers Are Out to Get Us"},{"categories":null,"contents":"Introduction Managing a small inventory in Excel can be convenient at first—but as the inventory grows, Excel often becomes more of a bottleneck than a solution. I recently decided to shift from an Excel-based approach to a SharePoint List for better flexibility, multi-user access, and integration potential with APIs (like Dell’s warranty service).\nIn this post, I’ll walk you through:\nWhy I moved from Excel to SharePoint How I set up the SharePoint List Automating warranty checks with the Dell API Lessons learned and future ideas 1. Why Move Away from Excel? Excel is great for quick data entry, but it shows its limitations when:\nMultiple users need to edit data simultaneously without version conflicts. You want to leverage real-time forms or automated processes. You need robust searching, filtering, and indexing across multiple columns. SharePoint Lists solve these problems by providing a web-based interface, access control via Microsoft 365, and the ability to integrate with tools like Power Automate or Python scripts via the Microsoft Graph API. I might build a PowerApp ontop of the list in the future to appify it further.\n2. Setting Up the SharePoint List I created a list called “Inventory” within a SharePoint site dedicated to IT assets. Each item in the list has fields like:\nTitle: The device name or label ServiceTagSerial: The device’s Dell service tag WarrantyType and WarrantyExpiration: For tracking coverage Status: e.g., “Assigned” or “Available” DeviceType (Laptop, Desktop, etc.) Location, Notes, and others… This structure immediately gave me:\nConcurrent editing by multiple team members Easy filtering (e.g., all items with “Status == Assigned”) Built-in version history and user permissions Easy Filters and View. I love views in SPO. 3. Automating Warranty Checks with the Dell API The inventory that I inherited was a mess. I wanted to progrmatically update it. So I wrote a scrpt to check warranty type and expiration date using Dell’s API. Here’s the high-level flow:\nScript Authenticates to SharePoint:\nUsing Azure AD (or an OAuth client) to connect to the list programmatically. Query for “Assigned” Items:\nGrab items where Status == 'Assigned'. Dell API Call:\nFor each item, parse the ServiceTagSerial field, make a request to the Dell Warranty API, and get the latest coverage info. Update SharePoint:\nWrite back the WarrantyType and WarrantyExpiration fields using Python + Microsoft Graph (or the direct SharePoint REST API). This automation ensures up-to-date warranty data is always visible in the same place where staff track device assignments—no more guesswork or rummaging through spreadsheets.\n4. Lessons Learned \u0026amp; Future Plans Index Key Fields: Filtering by fields like Status or ServiceTagSerial is smoother when columns are indexed in SharePoint. Consider Power Automate: If you’re not comfortable with custom scripts, Power Automate can help you schedule daily or weekly updates from Dell’s API. Dynamic Replacement Flags: A small JSON column formatting snippet or a calculated field can highlight which devices are due for replacement each year (e.g., “Replace in 2026”). Secure Your Credentials: Always store API keys or secrets in a secure fashion (e.g., Azure Key Vault, environment variables) rather than plain-text in scripts. Conclusion Migrating from an Excel file to a SharePoint List drastically simplified my small inventory management process. Collaboration improved, updates became programmatic, and pulling warranty information from Dell’s API gives real-time insights that Excel just couldn’t offer.\nIf you’re juggling device assignments and service tags in Excel, consider giving SharePoint + some automation a try—it might be the flexible, scalable solution you’ve been missing.\nThanks for reading! If you have questions or need help integrating your own solution, feel free to reach out or comment below.\n","date":"April 7, 2025","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/devops/python/inventory_mgmt/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eManaging a small inventory in Excel can be convenient at first—but as the inventory grows, \u003cstrong\u003eExcel\u003c/strong\u003e often becomes more of a bottleneck than a solution. I recently decided to shift from an Excel-based approach to a \u003cstrong\u003eSharePoint List\u003c/strong\u003e for better flexibility, multi-user access, and integration potential with APIs (like Dell’s warranty service).\u003c/p\u003e\n\u003cp\u003eIn this post, I’ll walk you through:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eWhy I moved from Excel to SharePoint\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eHow I set up the SharePoint List\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAutomating warranty checks with the Dell API\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLessons learned and future ideas\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-why-move-away-from-excel\"\u003e1. Why Move Away from Excel?\u003c/h2\u003e\n\u003cp\u003eExcel is great for quick data entry, but it shows its limitations when:\u003c/p\u003e","tags":["SharePoint","Inventory","Dell API","Automation"],"title":"Replacing Excel with a SharePoint List for Inventory Management"},{"categories":null,"contents":"Step-by-step guide to set up a Raspberry Pi to run Docker and Jenkins.\nInstall and Configure Docker Configure Jenkins to Run in a Docker image Create a file named \u0026ldquo;Dockerfile.jenkins with the following content and change the group ID to the Docker group Add the following to the Jenkins file Build and run the Docker image ","date":"February 20, 2025","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/devops/docker/dockerpi/","summary":"\u003cp\u003eStep-by-step guide to set up a Raspberry Pi to run Docker and Jenkins.\u003c/p\u003e\n\u003ch2 id=\"install-and-configure-docker\"\u003eInstall and Configure Docker\u003c/h2\u003e\n\u003cscript src=\"https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=DockerPi_install\"\u003e\u003c/script\u003e\n\u003ch2 id=\"configure-jenkins-to-run-in-a-docker-image\"\u003eConfigure Jenkins to Run in a Docker image\u003c/h2\u003e\n\u003cp\u003eCreate a file named \u0026ldquo;Dockerfile.jenkins with the following content and change the group ID to the Docker group\n\u003cscript src=\"https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=jenkins_setup\"\u003e\u003c/script\u003e\u003c/p\u003e\n\u003cp\u003eAdd the following to the Jenkins file\n\u003cscript src=\"https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=JenkinsDockerFile\"\u003e\u003c/script\u003e\u003c/p\u003e\n\u003ch2 id=\"build-and-run-the-docker-image\"\u003eBuild and run the Docker image\u003c/h2\u003e\n\u003cscript src=\"https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=BuildRunCustomImage\"\u003e\u003c/script\u003e","tags":["Docker","Containers","DevOps"],"title":"Setting Up Docker and Jenkins on Raspberry Pi"},{"categories":null,"contents":"I was investigating an issue with our identity provider and out of date passwords the other day. I needed to do a date comparison to find accounts with expired passwords. In the past I’d used (Get-Date).AddDays() and done an evaluation. It works, but to me the code is hard to read.\nI stumbled on the New-Timespan cmdlet which creates a timespan object. Creating a timespan object and referencing the days property is so much easier to read when you look at the code.\nHere’s an example of it in use to find accounts with expired passwords.\nThe $DateCheck variable is an integer of the number of days between the PasswordLastSet and Today.\nThe result is easy to check, and it makes the If condition simple too . It’s a number.\nI was happy to find something new in PowerShell.\nLinks NewTime-Span ","date":"March 24, 2022","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powershell/newtimespan/","summary":"\u003cp\u003eI was investigating an issue with our identity provider and out of date passwords the other day.  I needed to do a date comparison to find accounts with expired passwords. In the past I’d used (Get-Date).AddDays() and done an evaluation.   It works, but to me the code is hard to read.\u003c/p\u003e\n\u003cp\u003eI stumbled on the New-Timespan cmdlet which creates a timespan object.  Creating a timespan object and referencing the days property is so much easier to read when you look at the code.\u003c/p\u003e","tags":null,"title":"New-TimeSpan"},{"categories":null,"contents":"I’ve been working on a canvas app to track and manage major IT projects. The app uses a SharePoint list as a datasource. Our executives also use the app and the PowerBI dashboard to review projects that require executive approval in the form of what we call our Change Advisory Board (CAB).\nI recieved feedback from a member of our CAB. “It would be nice to separate out the completed projects from all the other projects.”\nI thought it would be easy to change my filter syntax to include project status of “not completed”. Wrong. You cannot delegate “not” when using a SharePoint list.\nProblem Using ‘Not’ in a gallery filter results in a delegation warning with a SharePoint List.\nThe dreaded delegation warning\nSolution In this use case, I resolved my delegation and filter dilemma with a new choice column in my datasource named “Archived” with the values of ‘true’ or ‘false’. Since equals to can be delegated, I make an equals to comparison to \u0026lsquo;false\u0026rsquo; to show all active projects.\nNow I have a filter expression that uses my various project filters and meets my user request.\nI decided to use a PowerAutomate flow to set my archive flag. I have other helper flows for the solution, so I chose to to continue down the flow route to keep my patch functions simple.\nComponents SharePoint List as a datasource Choice column named \u0026ldquo;ArchiveStatus\u0026rdquo; with values of \u0026rsquo;true\u0026rsquo; and \u0026lsquo;false\u0026rsquo; PowerAutomate Flow that sets the archive flag when a project status is set to completed. Code Snippet ","date":"March 13, 2022","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powerplatform/delegation/","summary":"\u003cp\u003eI’ve been working on a canvas app to track and manage major IT projects. The app uses a SharePoint list as a datasource.  Our executives also use the app and the PowerBI dashboard to review projects that require executive approval in the form of what we call our Change Advisory Board (CAB).\u003c/p\u003e\n\u003cp\u003eI recieved feedback from a member of our CAB.  “It would be nice to separate out the completed projects from all the other projects.”\u003c/p\u003e","tags":null,"title":"Delegation"},{"categories":null,"contents":"Problem You only want certain people to use a button on an app. The button can be for navigation, or an action. It doesn\u0026rsquo;t matter.\nSolution Use an Azure Active Directory group to control who can use see the button. This makes managing permissions for the button very easy. You don\u0026rsquo;t need to change the app, change the group membership.\nComponents Azure AD Group with members Azure AD Group Object ID Some onStart code A button you only want certain people to see Office 365 Groups Connector Office 365 Users Connector Azure AD Create an Azure AD Group Add members Make a note of the ObjectID Sample Group\nOnStart Code I\u0026rsquo;m doing a few things in my onstart.\nI create a collection of the Azure AD group and set it to ITProjectOwners. I set the current user\u0026rsquo;s UPN to CurrentUserUPN. I also use this at another point in my app that isn\u0026rsquo;t related to the button. I set a variable IsProjectOwner to either true or false by doing a lookup against ITProjectOwners using the current user\u0026rsquo;s UPN. If the UPN is in the collection, the variable is true. If the current user is not in the collection, the variable is set to false. When I want to hide a button, I set the Visable property to IsProjectOwner. This makes the button visable based on the value of IsProjectOwner.\n","date":"February 1, 2022","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powerplatform/hiding-a-button/","summary":"\u003ch4 id=\"problem\"\u003eProblem\u003c/h4\u003e\n\u003cp\u003eYou only want certain people to use a button on an app.  The button can be for navigation, or an action.  It doesn\u0026rsquo;t matter.\u003c/p\u003e\n\u003ch4 id=\"solution\"\u003eSolution\u003c/h4\u003e\n\u003cp\u003eUse an Azure Active Directory group to control who can use see the button.  This makes managing permissions for the button very easy. You don\u0026rsquo;t need to change the app, change the group membership.\u003c/p\u003e\n\u003ch5 id=\"components\"\u003eComponents\u003c/h5\u003e\n\u003cul\u003e\n\u003cli\u003eAzure AD Group with members\u003c/li\u003e\n\u003cli\u003eAzure AD Group Object ID\u003c/li\u003e\n\u003cli\u003eSome onStart code\u003c/li\u003e\n\u003cli\u003eA button you only want certain people to see\u003c/li\u003e\n\u003cli\u003eOffice 365 Groups Connector\u003c/li\u003e\n\u003cli\u003eOffice 365 Users Connector\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch6 id=\"azure-ad\"\u003eAzure AD\u003c/h6\u003e\n\u003cul\u003e\n\u003cli\u003eCreate an Azure AD Group\u003c/li\u003e\n\u003cli\u003eAdd members\u003c/li\u003e\n\u003cli\u003eMake a note of the ObjectID\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eSample Group\u003c/strong\u003e\u003c/p\u003e","tags":null,"title":"Hiding a Button"},{"categories":null,"contents":"Problem Barcodes are everywhere, and I needed a barcode scanner. So I made one.\nSolution This app started out as a single screen app where I could scan and email myself a barcode. It worked for the couple of odd times I needed a barcode off a piece of hardware.\nAfter getting a pile of equipment, scanning each item and sending an email approach wasn’t cutting it. I added a screen to my app for collecting many barcodes and emailing the result in an html table.\nI’ll illustrate how I handled multiple items.\nPowerApps Configuration Components Office 365 Outlook Connector Office 365 Users Connector Collections Barcode media component Home Screen\nSingle Barcode Screen\nScanning multiple items My screen contains\nNote/asset input Label displaying barcode Scanner Control Gallery with delete item Reset Collection Send to Self I enter the note field and tap Scan to read the barcode. After the scanner control reads the barcode, the note field and barcode are added to a collection called ScannedItems. The note/asset field can be cleared between barcode scans.\nI decided to not automatically clear it as I had a pile of the same model assets and I didn’t want to keep typing the same thing.\nAs I scan items, the items are added to the collection. One annoyance of scanning barcodes from manufacturer packages is that several barcodes can be clustered together. It’s easy to scan the wrong bar code, so I added a delete feature for individual items in my collection.\nAfter collecting all the UPCs, I send them to myself in an email with the body as an HTML table.\nMultipe Barcode Screen\nThe Scan button has an OnSelect that adds items to a collection called ScannedItems.\nThe collection has two properties: Asset and Barcode. I assign the value from the note field and the input from the scanner. Each time I scan, a new item is added to the collection.\nThe Send to email button has a little more going on. I\u0026rsquo;m using the Office 365 Users Connector to look up my email for the Outlook Connector.\nConcat is used to summarize ScannedItems and build my html table.\nEmail HTML table\nReferences Concat ","date":"January 8, 2022","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powerplatform/powerapps_barcode/","summary":"\u003ch4 id=\"problem\"\u003eProblem\u003c/h4\u003e\n\u003cp\u003eBarcodes are everywhere, and I needed a barcode scanner.  So I made one.\u003c/p\u003e\n\u003ch4 id=\"solution\"\u003eSolution\u003c/h4\u003e\n\u003cp\u003eThis app started out as a single screen app where I could scan and email  myself a barcode. It worked for the couple of odd times I needed a barcode off a piece of hardware.\u003cbr\u003e\nAfter getting a pile of equipment, scanning each item and sending an email approach wasn’t cutting it. I added a screen to my app for collecting many barcodes and emailing the result in an html table.\u003c/p\u003e","tags":null,"title":"Barcode Canvas App"},{"categories":null,"contents":"Problem Not really a problem. Just an interesting mini project. The office holiday party is a virtual affair this year. Our leadership wanted to play Bingo to give away some extra gifts. Our web filter blocks pretty much anything that would host an online Bingo game, so I knocked out a Bingo Canvas App.\nSolution Canvas App based on American Bingo Random board is generated each time \u0026ldquo;New Game\u0026rdquo; is clicked. Tiles change color when clicked to \u0026lsquo;mark\u0026rsquo; the tile. Screen shot of a new game board.\nClicking on a button changes the color from blue to red. Clicking again changes the color from red to blue. This allows players to mark or unmark a tile.\nPowerApps Configuration Components A series of one column tables for each BINGO letter. Formulas to randomize and order the tables. Buttons\u0026hellip;.TOO MANY BUTTONS. Creating the Bingo Values I had a false start on getting my values for each letter. I thought a collection of random numbers in each letter\u0026rsquo;s range would work. I could certainly make the collection, but duplicate values were a problem.\nMy final solution used single tables. I did need to do a bit of extra manual work to type out the values in the formula which I could probably do programmatically.\nHere\u0026rsquo;s my formula for setting up my \u0026lsquo;B\u0026rsquo; values. The pattern applies to INGO.\nI create the table and continue to reassign it. I could have probably wrapped all of this up in parentheses to make a single line, but I find that difficult to read.\nAssigning Values to the Buttons I use Last and FirstN in a formula to slice my table to get the value for each button. I\u0026rsquo;m only showing the code for the \u0026lsquo;B\u0026rsquo; values.\nChanging the color of the Buttons Here I use OnSelect and Fill.\nFuture considerations I might create an app to generate bingo numbers. I didn\u0026rsquo;t need to here as the host already has a way getting the numbers. I probably could have handled my buttons actions with less effort. References American Bingo ","date":"December 15, 2021","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powerplatform/powerappsbingo/","summary":"\u003ch4 id=\"problem\"\u003eProblem\u003c/h4\u003e\n\u003cp\u003eNot really a problem.  Just an interesting mini project.  The office holiday party is a virtual affair this year. Our leadership wanted to play Bingo to give away some extra gifts. Our web filter blocks pretty much anything that would host an online Bingo game, so I knocked out a Bingo Canvas App.\u003c/p\u003e\n\u003ch4 id=\"solution\"\u003eSolution\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eCanvas App based on American Bingo\u003c/li\u003e\n\u003cli\u003eRandom board is generated each time \u0026ldquo;New Game\u0026rdquo; is clicked.\u003c/li\u003e\n\u003cli\u003eTiles change color when clicked to \u0026lsquo;mark\u0026rsquo; the tile.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eScreen shot of a new game board.\u003c/p\u003e","tags":null,"title":"Bingo Canvas App"},{"categories":null,"contents":"I just passed the PL-900 exam today for Power Platform Fundamentals certification. Feels good. Now on to buiding more things.\n","date":"November 29, 2021","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/update-posts/powerplatformfundamentals/","summary":"\u003cp\u003eI just passed the PL-900 exam today for Power Platform Fundamentals certification.  Feels good. Now on to buiding more things.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/posts/update-posts/CERT-Fundamentals-Power-Platform.png\" alt=\"PL-900\"\u003e\u003c/p\u003e","tags":null,"title":"Microsoft Certificed: Power Platform Fundamentals"},{"categories":null,"contents":"Problem We have a job site where power outages occur more often than we\u0026rsquo;d like. The site engineer and other key staff members need to know when the power fluctuates while they work out a more robust back up power system for their construction requirements. Naturally, we have an APC UPS on site for our network equipment. Why not use that as a monitoring device and get messages to our enginners.\nSolution I used our Twilio connector and a Shared Mailbox trigger to send SMS messages to the site engineers. I could have sent emails, but who\u0026rsquo;s inbox isn\u0026rsquo;t swamped with noise? Plus, the site is in a remote area, and SMS is more reliable than email.\nThe Alerts\nCritical alert when the UPS has less than 5 minutes of battery. Informational alert when the UPS first goes on battery. Power sags happen often at this site, so this isn\u0026rsquo;t a true indicator of an outage. Informational alert when the UPS goes off battery. This is an all clear message that the event has ended. PowerAutomate Configuration Components Twilio Connector Outlook Connector APC configured to send email alerts to a shared mailbox The Flow It looks complicated but isn\u0026rsquo;t really.\nMonitor a Shared Mailbox for messages from APC.\nA ContactList array of mobile numbers used later in the Flow.\nA note here, double quotes are used for the numbers. Conditions that match subject line to the type of alert that will be sent.\nMy main condition checks for an email message with a subject containing \u0026ldquo;UPS Low Battery.\u0026rdquo; This indicates the power has been out for several minutes. In the If No of the main condition, I check the message for a subject containing \u0026ldquo;UPS on Battery.\u0026rdquo; This indicates the UPS just went on battery. In the If No of my \u0026ldquo;UPS on Battery\u0026rdquo;, I check the message for a subject containing \u0026ldquo;Power Restored\u0026rdquo;. Apply to each to send messages based on the type of alert. I use a time stamp at the beginning of each message to give a better sense of when the alert happened. Code Snippets of Interest Expression to take current time and convert to Pacific Standard Time.\n","date":"November 5, 2021","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powerplatform/poweralerts/","summary":"\u003ch4 id=\"problem\"\u003eProblem\u003c/h4\u003e\n\u003cp\u003eWe have a job site where power outages occur more often than we\u0026rsquo;d like.  The site engineer and other key staff members need to know when the power fluctuates while they work out a more robust back up power system for their construction requirements. Naturally, we have an APC UPS on site for our network equipment.  Why not use that as a monitoring device and get messages to our enginners.\u003c/p\u003e","tags":null,"title":"PowerAutomate with Twilio Integration for Electricity Outages."},{"categories":null,"contents":"After a number of great years at OmnicomMediaGroup, I\u0026rsquo;ve accecpted a position at Obayashi as a Systems Engineer. It was great working with everyone at OMG, especially Jon Serrette.\n","date":"November 3, 2020","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/update-posts/obayashi/","summary":"\u003cp\u003eAfter a number of great years at OmnicomMediaGroup, I\u0026rsquo;ve accecpted a position at Obayashi as a Systems Engineer.  It was great working with everyone at OMG, especially Jon Serrette.\u003c/p\u003e","tags":null,"title":"Starting at Obayashi"},{"categories":null,"contents":"‘Hello World!’\nNow that I’ve gotten that taken care of, onward to other things.\nI’m a Systems Admin working at OmnicomMediaGroup. Lately I’ve been working on a PowerShell module for API calls into our in house developed onboarding platform. In my spare time, I’ve been working on a few Raspberry Pi projects to automate video uploads and transcoding into AWS buckets.\nAs I run across things that interest me, I’ll post about them.\n","date":"August 21, 2020","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/update-posts/hello/","summary":"\u003cp\u003e‘Hello World!’\u003c/p\u003e\n\u003cp\u003eNow that I’ve gotten that taken care of, onward to other things.\u003c/p\u003e\n\u003cp\u003eI’m a Systems Admin working at OmnicomMediaGroup. Lately I’ve been working on a PowerShell module for API calls into our in house developed onboarding platform.\nIn my spare time, I’ve been working on a few Raspberry Pi projects to automate video uploads and transcoding into AWS buckets.\u003c/p\u003e\n\u003cp\u003eAs I run across things that interest me, I’ll post about them.\u003c/p\u003e","tags":null,"title":"Hello from new website"},{"categories":null,"contents":"SMS Notification PowerApp with Twilio Integration Problem Obayashi has a subscription to an SMS Emergency Notification platform. Access to the platform costs Obyashi approximately $5000 per year even if no messages are ever sent. That\u0026rsquo;s five thousand to reserve the right to use the platform.\nI was asked to take a look at different platforms to reduce cost.\nSolution I built a PowerApp that uses a Twilio connector. We pay for the messages that we use at a rate of 0.0075 per message and $1.00 per month to reserve a local number. This solution saved Obayashi about $4990 in cost.\nThe PowerApp allows a member of HR or executive to send a SMS message selected groups.\nApp Configuration Components Twilio Connector SharePoint Connector SharePoint Lists containing Emergency Contact Numbers Screens Landing Screen Landing Screen to select an SMS Group via a drop down. Message Composing Screen Compose a message to send. Messages are preceeded with a standard greeting. Counter to display the number of recipients of the message. Counter to display chararacters remaining in message to ensure message is under character count for single line SMS. Confirmation Screen Displays a confirmation of the message. Code Snippets of Interest Displaying the remaining character count from a text input. My text input is named SMSMessage.\n\u0026#34;Characters remaining: \u0026#34; \u0026amp; Text(149-Len(SmsMessage.Text)) Additional Features to Implement I had a requirement to get the PowerApp deployed quickly, so leveraged static SharePoint Online lists for mobile numbers. Not all of our employees have corporate issued devices and were not Azure Active Directory. I\u0026rsquo;d like to query AAD for corporate mobile devices and combine a short list of non published numbers. This would reduce the amount of effort to keep the lists current. Record responses from message recipients. I believe that I\u0026rsquo;ll implement this by giving the option of creating and sending a MS Form in the case of emergency contacts. Record messages sent. This could be implemented by writing to another SharePoint list as a log. Additionally, I could display the list as a gallery in another screen. ","date":"June 1, 2020","hero":"/images/site/custom-hero.jpg","permalink":"https://www.dannoprojects.com/posts/powerplatform/sms/","summary":"\u003ch3 id=\"sms-notification-powerapp-with-twilio-integration\"\u003eSMS Notification PowerApp with Twilio Integration\u003c/h3\u003e\n\u003ch4 id=\"problem\"\u003eProblem\u003c/h4\u003e\n\u003cp\u003eObayashi has a subscription to an SMS Emergency Notification platform. Access to the platform costs Obyashi approximately $5000 per year even if no messages are ever sent.  That\u0026rsquo;s five thousand to reserve the right to use the platform.\u003c/p\u003e\n\u003cp\u003eI was asked to take a look at different platforms to reduce cost.\u003c/p\u003e\n\u003ch4 id=\"solution\"\u003eSolution\u003c/h4\u003e\n\u003cp\u003eI built a PowerApp that uses a Twilio connector.  We pay for the messages that we use at a rate of 0.0075 per message and $1.00 per month to reserve a local number.  This solution saved Obayashi about $4990 in cost.\u003c/p\u003e","tags":null,"title":"SMS Notification PowerApp with Twilio Integration"}]