<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Danno Projects</title><link>https://www.dannoprojects.com/posts/</link><description>Recent content in Posts on Danno Projects</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 20 Apr 2025 00:00:00 -0800</lastBuildDate><atom:link href="https://www.dannoprojects.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Printer Monitor: Because Printers Are Out to Get Us</title><link>https://www.dannoprojects.com/posts/devops/python/printer_monitor/</link><pubDate>Mon, 14 Apr 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/python/printer_monitor/</guid><description>&lt;h1 id="printer-monitor-because-printers-are-out-to-get-us">Printer Monitor: Because Printers Are Out to Get Us&lt;/h1>
&lt;p>No one wants to be the printer whisperer—especially for low-cost, unmanaged printers. After one too many toner emergencies (always at 4:59 PM on a Friday), I decided to automate the pain away. If you’re tired of being the “toner psychic,” this Python script is for you.&lt;/p>
&lt;hr>
&lt;h2 id="why">Why?&lt;/h2>
&lt;p>Printers are needy, dramatic, and love to run out of toner at the worst possible moment. This project checks their status, logs the drama, and even emails you when it’s time to order more supplies. No more “surprise, you’re out of magenta!” moments.&lt;/p></description></item><item><title>Replacing Excel with a SharePoint List for Inventory Management</title><link>https://www.dannoprojects.com/posts/devops/python/inventory_mgmt/</link><pubDate>Mon, 07 Apr 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/python/inventory_mgmt/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Managing a small inventory in Excel can be convenient at first—but as the inventory grows, &lt;strong>Excel&lt;/strong> often becomes more of a bottleneck than a solution. I recently decided to shift from an Excel-based approach to a &lt;strong>SharePoint List&lt;/strong> for better flexibility, multi-user access, and integration potential with APIs (like Dell’s warranty service).&lt;/p>
&lt;p>In this post, I’ll walk you through:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Why I moved from Excel to SharePoint&lt;/strong>&lt;/li>
&lt;li>&lt;strong>How I set up the SharePoint List&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Automating warranty checks with the Dell API&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Lessons learned and future ideas&lt;/strong>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="1-why-move-away-from-excel">1. Why Move Away from Excel?&lt;/h2>
&lt;p>Excel is great for quick data entry, but it shows its limitations when:&lt;/p></description></item><item><title>Setting Up Docker and Jenkins on Raspberry Pi</title><link>https://www.dannoprojects.com/posts/devops/docker/dockerpi/</link><pubDate>Thu, 20 Feb 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/docker/dockerpi/</guid><description>&lt;p>Step-by-step guide to set up a Raspberry Pi to run Docker and Jenkins.&lt;/p>
&lt;h2 id="install-and-configure-docker">Install and Configure Docker&lt;/h2>
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=DockerPi_install">&lt;/script>
&lt;h2 id="configure-jenkins-to-run-in-a-docker-image">Configure Jenkins to Run in a Docker image&lt;/h2>
&lt;p>Create a file named &amp;ldquo;Dockerfile.jenkins with the following content and change the group ID to the Docker group
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=jenkins_setup">&lt;/script>&lt;/p>
&lt;p>Add the following to the Jenkins file
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=JenkinsDockerFile">&lt;/script>&lt;/p>
&lt;h2 id="build-and-run-the-docker-image">Build and run the Docker image&lt;/h2>
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=BuildRunCustomImage">&lt;/script></description></item><item><title>New-TimeSpan</title><link>https://www.dannoprojects.com/posts/powershell/newtimespan/</link><pubDate>Thu, 24 Mar 2022 18:59:41 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powershell/newtimespan/</guid><description>&lt;p>I was investigating an issue with our identity provider and out of date passwords the other day. I needed to do a date comparison to find accounts with expired passwords. In the past I’d used (Get-Date).AddDays() and done an evaluation. It works, but to me the code is hard to read.&lt;/p>
&lt;p>I stumbled on the New-Timespan cmdlet which creates a timespan object. Creating a timespan object and referencing the days property is so much easier to read when you look at the code.&lt;/p></description></item><item><title>Delegation</title><link>https://www.dannoprojects.com/posts/powerplatform/delegation/</link><pubDate>Sun, 13 Mar 2022 18:59:41 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powerplatform/delegation/</guid><description>&lt;p>I’ve been working on a canvas app to track and manage major IT projects. The app uses a SharePoint list as a datasource. Our executives also use the app and the PowerBI dashboard to review projects that require executive approval in the form of what we call our Change Advisory Board (CAB).&lt;/p>
&lt;p>I recieved feedback from a member of our CAB. “It would be nice to separate out the completed projects from all the other projects.”&lt;/p></description></item><item><title>Hiding a Button</title><link>https://www.dannoprojects.com/posts/powerplatform/hiding-a-button/</link><pubDate>Tue, 01 Feb 2022 18:59:41 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powerplatform/hiding-a-button/</guid><description>&lt;h4 id="problem">Problem&lt;/h4>
&lt;p>You only want certain people to use a button on an app. The button can be for navigation, or an action. It doesn&amp;rsquo;t matter.&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;p>Use an Azure Active Directory group to control who can use see the button. This makes managing permissions for the button very easy. You don&amp;rsquo;t need to change the app, change the group membership.&lt;/p>
&lt;h5 id="components">Components&lt;/h5>
&lt;ul>
&lt;li>Azure AD Group with members&lt;/li>
&lt;li>Azure AD Group Object ID&lt;/li>
&lt;li>Some onStart code&lt;/li>
&lt;li>A button you only want certain people to see&lt;/li>
&lt;li>Office 365 Groups Connector&lt;/li>
&lt;li>Office 365 Users Connector&lt;/li>
&lt;/ul>
&lt;h6 id="azure-ad">Azure AD&lt;/h6>
&lt;ul>
&lt;li>Create an Azure AD Group&lt;/li>
&lt;li>Add members&lt;/li>
&lt;li>Make a note of the ObjectID&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Sample Group&lt;/strong>&lt;/p></description></item><item><title>Barcode Canvas App</title><link>https://www.dannoprojects.com/posts/powerplatform/powerapps_barcode/</link><pubDate>Sat, 08 Jan 2022 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powerplatform/powerapps_barcode/</guid><description>&lt;h4 id="problem">Problem&lt;/h4>
&lt;p>Barcodes are everywhere, and I needed a barcode scanner. So I made one.&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;p>This app started out as a single screen app where I could scan and email myself a barcode. It worked for the couple of odd times I needed a barcode off a piece of hardware.&lt;br>
After getting a pile of equipment, scanning each item and sending an email approach wasn’t cutting it. I added a screen to my app for collecting many barcodes and emailing the result in an html table.&lt;/p></description></item><item><title>Bingo Canvas App</title><link>https://www.dannoprojects.com/posts/powerplatform/powerappsbingo/</link><pubDate>Wed, 15 Dec 2021 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powerplatform/powerappsbingo/</guid><description>&lt;h4 id="problem">Problem&lt;/h4>
&lt;p>Not really a problem. Just an interesting mini project. The office holiday party is a virtual affair this year. Our leadership wanted to play Bingo to give away some extra gifts. Our web filter blocks pretty much anything that would host an online Bingo game, so I knocked out a Bingo Canvas App.&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;ul>
&lt;li>Canvas App based on American Bingo&lt;/li>
&lt;li>Random board is generated each time &amp;ldquo;New Game&amp;rdquo; is clicked.&lt;/li>
&lt;li>Tiles change color when clicked to &amp;lsquo;mark&amp;rsquo; the tile.&lt;/li>
&lt;/ul>
&lt;p>Screen shot of a new game board.&lt;/p></description></item><item><title>Microsoft Certificed: Power Platform Fundamentals</title><link>https://www.dannoprojects.com/posts/update-posts/powerplatformfundamentals/</link><pubDate>Mon, 29 Nov 2021 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/update-posts/powerplatformfundamentals/</guid><description>&lt;p>I just passed the PL-900 exam today for Power Platform Fundamentals certification. Feels good. Now on to buiding more things.&lt;/p>
&lt;p>&lt;img src="https://www.dannoprojects.com/posts/update-posts/CERT-Fundamentals-Power-Platform.png" alt="PL-900">&lt;/p></description></item><item><title>PowerAutomate with Twilio Integration for Electricity Outages.</title><link>https://www.dannoprojects.com/posts/powerplatform/poweralerts/</link><pubDate>Fri, 05 Nov 2021 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powerplatform/poweralerts/</guid><description>&lt;h4 id="problem">Problem&lt;/h4>
&lt;p>We have a job site where power outages occur more often than we&amp;rsquo;d like. The site engineer and other key staff members need to know when the power fluctuates while they work out a more robust back up power system for their construction requirements. Naturally, we have an APC UPS on site for our network equipment. Why not use that as a monitoring device and get messages to our enginners.&lt;/p></description></item><item><title>Starting at Obayashi</title><link>https://www.dannoprojects.com/posts/update-posts/obayashi/</link><pubDate>Tue, 03 Nov 2020 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/update-posts/obayashi/</guid><description>&lt;p>After a number of great years at OmnicomMediaGroup, I&amp;rsquo;ve accecpted a position at Obayashi as a Systems Engineer. It was great working with everyone at OMG, especially Jon Serrette.&lt;/p></description></item><item><title>Hello from new website</title><link>https://www.dannoprojects.com/posts/update-posts/hello/</link><pubDate>Fri, 21 Aug 2020 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/update-posts/hello/</guid><description>&lt;p>‘Hello World!’&lt;/p>
&lt;p>Now that I’ve gotten that taken care of, onward to other things.&lt;/p>
&lt;p>I’m a Systems Admin working at OmnicomMediaGroup. Lately I’ve been working on a PowerShell module for API calls into our in house developed onboarding platform.
In my spare time, I’ve been working on a few Raspberry Pi projects to automate video uploads and transcoding into AWS buckets.&lt;/p>
&lt;p>As I run across things that interest me, I’ll post about them.&lt;/p></description></item><item><title>SMS Notification PowerApp with Twilio Integration</title><link>https://www.dannoprojects.com/posts/powerplatform/sms/</link><pubDate>Mon, 01 Jun 2020 06:49:22 -0800</pubDate><guid>https://www.dannoprojects.com/posts/powerplatform/sms/</guid><description>&lt;h3 id="sms-notification-powerapp-with-twilio-integration">SMS Notification PowerApp with Twilio Integration&lt;/h3>
&lt;h4 id="problem">Problem&lt;/h4>
&lt;p>Obayashi has a subscription to an SMS Emergency Notification platform. Access to the platform costs Obyashi approximately $5000 per year even if no messages are ever sent. That&amp;rsquo;s five thousand to reserve the right to use the platform.&lt;/p>
&lt;p>I was asked to take a look at different platforms to reduce cost.&lt;/p>
&lt;h4 id="solution">Solution&lt;/h4>
&lt;p>I built a PowerApp that uses a Twilio connector. We pay for the messages that we use at a rate of 0.0075 per message and $1.00 per month to reserve a local number. This solution saved Obayashi about $4990 in cost.&lt;/p></description></item></channel></rss>