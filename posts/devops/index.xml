<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on Danno Projects</title><link>https://www.dannoprojects.com/posts/devops/</link><description>Recent content in DevOps on Danno Projects</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 20 Apr 2025 00:00:00 -0800</lastBuildDate><atom:link href="https://www.dannoprojects.com/posts/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>WiFi Monitor System</title><link>https://www.dannoprojects.com/posts/devops/docker/wifimonitor/</link><pubDate>Sun, 20 Apr 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/docker/wifimonitor/</guid><description>&lt;h1 id="wifi-monitor-system">WiFi Monitor System&lt;/h1>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The WiFi Monitor System is an automated solution designed to monitor and maintain reliable WiFi connectivity in office environments, particularly for guest WiFi networks that may be unreliable. This system continuously checks WiFi connectivity and automatically power cycles the WiFi equipment when issues are detected, minimizing downtime and manual intervention.&lt;/p>
&lt;h2 id="problem-statement">Problem Statement&lt;/h2>
&lt;p>Many offices experience issues with their guest WiFi networks:&lt;/p>
&lt;ul>
&lt;li>Intermittent connectivity problems&lt;/li>
&lt;li>Need for frequent manual router/access point reboots&lt;/li>
&lt;li>Disruption to guests and staff requiring WiFi access&lt;/li>
&lt;li>IT staff time wasted on repetitive troubleshooting tasks&lt;/li>
&lt;/ul>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>This automated monitoring system:&lt;/p></description></item><item><title>Printer Monitor: Because Printers Are Out to Get Us</title><link>https://www.dannoprojects.com/posts/devops/python/printer_monitor/</link><pubDate>Mon, 14 Apr 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/python/printer_monitor/</guid><description>&lt;h1 id="printer-monitor-because-printers-are-out-to-get-us">Printer Monitor: Because Printers Are Out to Get Us&lt;/h1>
&lt;p>No one wants to be the printer whisperer—especially for low-cost, unmanaged printers. After one too many toner emergencies (always at 4:59 PM on a Friday), I decided to automate the pain away. If you’re tired of being the “toner psychic,” this Python script is for you.&lt;/p>
&lt;hr>
&lt;h2 id="why">Why?&lt;/h2>
&lt;p>Printers are needy, dramatic, and love to run out of toner at the worst possible moment. This project checks their status, logs the drama, and even emails you when it’s time to order more supplies. No more “surprise, you’re out of magenta!” moments.&lt;/p></description></item><item><title>Replacing Excel with a SharePoint List for Inventory Management</title><link>https://www.dannoprojects.com/posts/devops/python/inventory_mgmt/</link><pubDate>Mon, 07 Apr 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/python/inventory_mgmt/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Managing a small inventory in Excel can be convenient at first—but as the inventory grows, &lt;strong>Excel&lt;/strong> often becomes more of a bottleneck than a solution. I recently decided to shift from an Excel-based approach to a &lt;strong>SharePoint List&lt;/strong> for better flexibility, multi-user access, and integration potential with APIs (like Dell’s warranty service).&lt;/p>
&lt;p>In this post, I’ll walk you through:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Why I moved from Excel to SharePoint&lt;/strong>&lt;/li>
&lt;li>&lt;strong>How I set up the SharePoint List&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Automating warranty checks with the Dell API&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Lessons learned and future ideas&lt;/strong>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="1-why-move-away-from-excel">1. Why Move Away from Excel?&lt;/h2>
&lt;p>Excel is great for quick data entry, but it shows its limitations when:&lt;/p></description></item><item><title>Setting Up Docker and Jenkins on Raspberry Pi</title><link>https://www.dannoprojects.com/posts/devops/docker/dockerpi/</link><pubDate>Thu, 20 Feb 2025 00:00:00 -0800</pubDate><guid>https://www.dannoprojects.com/posts/devops/docker/dockerpi/</guid><description>&lt;p>Step-by-step guide to set up a Raspberry Pi to run Docker and Jenkins.&lt;/p>
&lt;h2 id="install-and-configure-docker">Install and Configure Docker&lt;/h2>
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=DockerPi_install">&lt;/script>
&lt;h2 id="configure-jenkins-to-run-in-a-docker-image">Configure Jenkins to Run in a Docker image&lt;/h2>
&lt;p>Create a file named &amp;ldquo;Dockerfile.jenkins with the following content and change the group ID to the Docker group
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=jenkins_setup">&lt;/script>&lt;/p>
&lt;p>Add the following to the Jenkins file
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=JenkinsDockerFile">&lt;/script>&lt;/p>
&lt;h2 id="build-and-run-the-docker-image">Build and run the Docker image&lt;/h2>
&lt;script src="https://gist.github.com/dannoprojects/d9fa3c3d2bc91a7861c92eb3c85635eb.js?file=BuildRunCustomImage">&lt;/script></description></item></channel></rss>